version: '3.8'

services:
  frontend:
    image: frontend:latest
    depends_on:
      - mongo-db
      - backend
    ports:
      - "4200:80"
    networks:
      - rest-network

  backend:
    image: backend:latest
    depends_on:
      - mongo-db
    ports:
      - 7000:7000
      - 5000:5000
    volumes:
      - ../backend:/backend
    environment:
      - MONGO_HOST=db_mongo
    networks:
      - rest-network
      - internal

  mongo-db:
    image: mongo:latest
    hostname: db_mongo
    environment:
      MONGO_INITDB_DATABASE: database
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    ports:
      - "27017:27017"
    volumes:
      - db_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mongo-compose-network
      - rest-network

  mongo-express:
    image: mongo-express:latest
    depends_on:
      - mongo-db
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-db
      ME_CONFIG_MONGODB_PORT: 27017
    restart: unless-stopped
    ports:
      - "8081:8081"
    networks:
      - mongo-compose-network
      - internal

  kong:
    image: kong:latest
    volumes:
      - ./kong:/usr/local/kong/declarative #injectarea fisierului de configurare la calea specificata
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml #trebuie specificat unde anume se va gasi fisierul de configurare
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
        - 80:8000
        - 443:8443
        - 8001:8001
        - 8444:8444
    networks:
      - internal

networks:
    mongo-compose-network:
    rest-network:
    internal:

volumes:
    db_data: {}